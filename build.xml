<project name="Project1" default="dist" basedir=".">
  <description>
    Project 1 for CSCI 310
  </description>
  <!-- set global properties for this build -->
  <property name="src.dir" location="src/main" />
  <property name="build.dir" location="bin" />
  <property name="main.build.dir" location="bin/main" />
  <property name="test.src.dir" value="src/test"/>
  <property name="test.build.dir" value="bin/test"/>
  <property name="dist.dir" location="dist" />
  <property name="doc.dir" location="doc" />


  <path id="classpath.test">
    <pathelement location="lib/junit-4.12.jar"/>
    <pathelement location="lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${main.build.dir}"/>
  </path>


  <target name="init" description="setup project directories">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${main.build.dir}"/>
    <mkdir dir="${doc.dir}"/>
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${test.build.dir}"/>
  </target>

  <!-- Compile the java code in src dir into build dir -->
  <target name="compile" depends="init" description="compile java sources">
    <!-- Compile the Java code from ${src.dir} into ${main.build.dir} -->
    <javac srcdir="${src.dir}" destdir="${main.build.dir}" includeantruntime="false"/>
    
    <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
        <classpath refid="classpath.test"/>
    </javac>
  </target>

  <!-- compile the test files -->
<!--   <target name="test-compile" depends="compile">
    <mkdir dir="${test.build.dir}"/>
    <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
        <classpath refid="classpath.test"/>
    </javac>
  </target> -->


  <!-- Generate javadocs for current project into docs dir -->
  <target name="doc" depends="init" description="generate documentation">
    <javadoc destdir="${doc.dir}">
      <fileset dir="${src.dir}" defaultexcludes="yes">
        <include name="*.java"/>
      </fileset>
    </javadoc>
  </target>

  <target name="dist" depends="compile" description="generate the distribution">
    <!-- Put everything in ${main.build.dir} into the Project1.jar file -->
    <jar jarfile="${dist.dir}/Project1.jar" basedir="${main.build.dir}" includes="**">
      <manifest>
        <attribute name="Main-Class" value="SearchMap" />
      </manifest>
    </jar>
  </target>

  <!-- run the jar file after dist with arguments input file and output file -->
  <target name="run" depends="dist" description="run the program">
    <java jar="${dist.dir}/Project1.jar" fork="true">
      <arg value="input.txt"/>
      <arg value="output.txt"/>
    </java>
  </target>

  <!-- test using junit -->
  <target name="test" depends="compile">
    <junit printsummary="on" haltonfailure="yes" fork="true">
        <classpath>
          <path refid="classpath.test"/>
          <pathelement location="${test.build.dir}"/>
        </classpath>
        <formatter type="brief" usefile="false" />
        <batchtest>
            <fileset dir="${test.src.dir}" includes="*.java" />
        </batchtest>
    </junit>
  </target>


  <target name="clean" description="clean up">
    <!-- Delete the ${main.build.dir} and ${dist.dir} directory trees -->
    <delete dir="${build.dir}/"/>
    <delete dir="${dist.dir}"/>
    <delete dir="${doc.dir}"/>
  </target>
</project>